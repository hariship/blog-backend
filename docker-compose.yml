version: '3.8'
services:
  blog-backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    image: blog-backend:latest
    container_name: blog-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - REDIS_URL=redis://redis:6379
    env_file:
      - .env
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  telegram-bot:
    build:
      context: .
      dockerfile: Dockerfile.telegram
    image: telegram-bot:latest
    container_name: telegram-bot
    environment:
      - NODE_ENV=production
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "sh", "-c", "ps aux | grep telegram-daemon || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  redis:
    image: redis:alpine
    container_name: blog-redis
    expose:
      - "6379"
    restart: unless-stopped
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
